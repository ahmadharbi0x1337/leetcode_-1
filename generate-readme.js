// generate-readme.js
const fs = require('fs');

// Get all directories
const entries = fs.readdirSync('.', { withFileTypes: true });
const problemDirs = entries
  .filter(entry => entry.isDirectory() && /^\d+#_/.test(entry.name));

const formatName = (dirName) => {
  const [numberPart, ...rest] = dirName.split('#_');
  const number = parseInt(numberPart).toString(); // remove leading zeros
  const words = rest.join('_').split('_');
  const title = words.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');
  return { number, title, dir: dirName };
};

const problems = problemDirs.map(d => formatName(d.name));

const readmeContent = `# ðŸ§  LeetCode Solutions in JavaScript

![Auto Update](https://github.com/ahmadharbi0x1337/leetcode_-1/actions/workflows/update-readme.yml/badge.svg)

Welcome to my leetcode solutions repository! Here you'll find my JavaScript implementations for various LeetCode problems.

Each problem has its own directory containing:

- \`description.txt\`
- \`notes.txt\`
- \`solution.js\`

---

## About This Repository

This repository is intended to serve as a learning resource and a showcase of my problem-solving skills.

## ðŸ“š Problems List

${problems.map((p) => {
  const encodedDir = encodeURIComponent(p.dir);
  return ` [${p.number}. ${p.title}](${encodedDir})`;
}).join('\n')}

---

## Contact

Feel free to reach out if you have any questions or suggestions!

> Auto-generated by [generate-readme.js](./generate-readme.js)
`;

fs.writeFileSync('README.md', readmeContent);
console.log("âœ… README.md generated.");

